/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package project.GUI;

import project.EventTypes;
import project.GUIEvent;

import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;
import javax.swing.table.DefaultTableModel;
import java.util.ArrayList;
import java.util.Collections;
import java.util.List;
import java.util.Map;

import static project.SolverTypes.*;
import javax.swing.GroupLayout.Alignment;
import javax.swing.GroupLayout;
import javax.swing.LayoutStyle.ComponentPlacement;
import java.awt.Font;

/**
 *
 * @author fcastillo
 */
public class QuestPanel extends javax.swing.JPanel {

    private ToolGUI parentFrame;
    /**
     * Creates new form QuestList
     */
    public QuestPanel(ToolGUI parentFrame) {
        initComponents();
        this.parentFrame = parentFrame;
        setVisible(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        btnAddQuest = new javax.swing.JButton();
        btnAddQuest.setFont(new Font("Tahoma", Font.BOLD, 14));
        btnEditQuest = new javax.swing.JButton();
        btnEditQuest.setFont(new Font("Tahoma", Font.BOLD, 14));
        btnDeleteQuest = new javax.swing.JButton();
        btnDeleteQuest.setFont(new Font("Tahoma", Font.BOLD, 14));
        btnSolution = new javax.swing.JButton();
        btnSolution.setFont(new Font("Tahoma", Font.BOLD, 14));
        cmbTypeSolver = new javax.swing.JComboBox<>();
        cmbTypeSolver.setFont(new Font("Tahoma", Font.BOLD, 14));
        cmbUserSolver = new javax.swing.JComboBox<>();
        cmbUserSolver.setFont(new Font("Tahoma", Font.BOLD, 14));

        jTable1.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {},
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        jScrollPane1.setViewportView(jTable1);
        jTable1.getSelectionModel().addListSelectionListener(new ListSelectionListener() {
            @Override
            public void valueChanged(ListSelectionEvent event) {
                enableBtns(true);
            }
        });

        btnAddQuest.setText("Hinzufuegen");
        btnAddQuest.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addQuestActionPerformed(evt);
            }
        });

        btnEditQuest.setText("Bearbeiten");
        btnEditQuest.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editQuestActionPerformed(evt);
            }
        });

        btnDeleteQuest.setText("Loeschen");
        btnDeleteQuest.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteQuestActionPerformed(evt);
            }
        });

        btnSolution.setText("Loesung");
        btnSolution.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSolutionActionPerformed(evt);
            }
        });

        cmbTypeSolver.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Kapazitaetkritisch", "Zeitkritisch" }));

        cmbUserSolver.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Loose", "Mehlis", "Castillo" }));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        layout.setHorizontalGroup(
        	layout.createParallelGroup(Alignment.LEADING)
        		.addGroup(layout.createSequentialGroup()
        			.addGap(5)
        			.addGroup(layout.createParallelGroup(Alignment.LEADING, false)
        				.addGroup(layout.createSequentialGroup()
        					.addComponent(cmbUserSolver, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
        					.addPreferredGap(ComponentPlacement.RELATED)
        					.addComponent(cmbTypeSolver, GroupLayout.PREFERRED_SIZE, 175, GroupLayout.PREFERRED_SIZE)
        					.addPreferredGap(ComponentPlacement.RELATED)
        					.addComponent(btnSolution, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        				.addGroup(layout.createSequentialGroup()
        					.addComponent(btnAddQuest, GroupLayout.PREFERRED_SIZE, 138, GroupLayout.PREFERRED_SIZE)
        					.addPreferredGap(ComponentPlacement.RELATED)
        					.addComponent(btnEditQuest, GroupLayout.PREFERRED_SIZE, 131, GroupLayout.PREFERRED_SIZE)
        					.addPreferredGap(ComponentPlacement.RELATED)
        					.addComponent(btnDeleteQuest, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        				.addComponent(jScrollPane1, GroupLayout.PREFERRED_SIZE, 409, GroupLayout.PREFERRED_SIZE))
        			.addContainerGap(36, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
        	layout.createParallelGroup(Alignment.LEADING)
        		.addGroup(layout.createSequentialGroup()
        			.addGap(15)
        			.addComponent(jScrollPane1, GroupLayout.PREFERRED_SIZE, 190, GroupLayout.PREFERRED_SIZE)
        			.addGap(18)
        			.addGroup(layout.createParallelGroup(Alignment.BASELINE)
        				.addComponent(btnAddQuest)
        				.addComponent(btnEditQuest)
        				.addComponent(btnDeleteQuest))
        			.addGap(18)
        			.addGroup(layout.createParallelGroup(Alignment.BASELINE)
        				.addComponent(cmbUserSolver, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
        				.addComponent(cmbTypeSolver, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
        				.addComponent(btnSolution))
        			.addContainerGap(48, Short.MAX_VALUE))
        );
        this.setLayout(layout);
        
        DefaultTableModel tableModel = new DefaultTableModel() {

            @Override
            public boolean isCellEditable(int row, int column) {
                return false;
            }
        };

        String titles[] = {"Resource", "Menge"};
        tableModel.setColumnIdentifiers(titles);
        jTable1.setModel(tableModel);
    }// </editor-fold>//GEN-END:initComponents

    private void addQuestActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addQuestActionPerformed
        parentFrame.addNewQuest();
    }//GEN-LAST:event_addQuestActionPerformed

    private void editQuestActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editQuestActionPerformed
        String editResource = String.valueOf(jTable1.getValueAt(jTable1.getSelectedRow(),0));
        String editMenge = String.valueOf(jTable1.getValueAt(jTable1.getSelectedRow(),1));
        parentFrame.editQuest(editResource, editMenge);
    }//GEN-LAST:event_editQuestActionPerformed

    private void deleteQuestActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteQuestActionPerformed
        List<Object> deleteResource = new ArrayList<>();
        String deleteElement = String.valueOf(jTable1.getValueAt(jTable1.getSelectedRow(),0));
        deleteResource.add(deleteElement);
        GUIEvent ge = new GUIEvent(EventTypes.RESOURCE_REMOVED, deleteResource);
        parentFrame.updateController(ge);
        ((DefaultTableModel)jTable1.getModel()).removeRow(jTable1.getSelectedRow());
        enableBtns(false);
    }//GEN-LAST:event_deleteQuestActionPerformed

    public void btnSolutionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSolutionActionPerformed
        String type = (String) cmbTypeSolver.getSelectedItem();
        String user = (String) cmbUserSolver.getSelectedItem();
        GUIEvent ge = new GUIEvent(EventTypes.SOLVE, solution(type,user));
        parentFrame.updateController(ge);
    }//GEN-LAST:event_btnSolutionActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAddQuest;
    private javax.swing.JButton btnDeleteQuest;
    private javax.swing.JButton btnEditQuest;
    private javax.swing.JButton btnSolution;
    private javax.swing.JComboBox<String> cmbTypeSolver;
    private javax.swing.JComboBox<String> cmbUserSolver;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    // End of variables declaration//GEN-END:variables

    public void updateTable() {
    	DefaultTableModel tableModel = (DefaultTableModel) jTable1.getModel();  
    	tableModel.setRowCount(0);
    	
        Map<String, Integer> resources = parentFrame.getQuest();
        if(!resources.isEmpty()) {
            resources.forEach((k,v) -> {
                Object[]  object = {k, v};
                tableModel.addRow(object);
            });
        }
        
        enableBtns(false);
    }

    private void enableBtns(boolean setEnabl) {
        if(setEnabl){
            btnDeleteQuest.setEnabled(true);
            btnEditQuest.setEnabled(true);
        } else {
            btnDeleteQuest.setEnabled(false);
            btnEditQuest.setEnabled(false);
        }

        if(!parentFrame.getQuest().isEmpty()) {
            btnSolution.setEnabled(true);
            cmbTypeSolver.setEnabled(true);
            cmbUserSolver.setEnabled(true);
        } else {
            btnSolution.setEnabled(false);
            cmbTypeSolver.setEnabled(false);
            cmbUserSolver.setEnabled(false);
        }
    }

    private List<Object> solution(String type, String user) {
        List<Object> typeSolution = new ArrayList<>();
        if(type.matches("Kapazitaetkritisch")) {
            switch (user) {
                case "Loose":
                    typeSolution = Collections.singletonList(CAPACITY_SL);
                    break;
                case "Mehlis":
                    typeSolution = Collections.singletonList(CAPACITY_CM);
                    break;
                case "Castillo":
                    typeSolution = Collections.singletonList(CAPACITY_FH);
                    break;
                default:
                    break;
            }
        } else  {
            switch (user) {
                case "Loose":
                    typeSolution = Collections.singletonList(TIME_SL);
                    break;
                case "Mehlis":
                    typeSolution = Collections.singletonList(TIME_CM);
                    break;
                case "Castillo":
                    typeSolution = Collections.singletonList(TIME_FH);
                    break;
                default:
                    break;
            }
        }
        return typeSolution;
    }
    
    public void clearView(boolean questFormVisible) {
    	boolean wasVisible = isVisible() || questFormVisible;
    	enableBtns(false);
    	
    	DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
		model.setRowCount(0);
		
		if(wasVisible)
			parentFrame.showQuestPanel(null);
    }
}
